apiVersion: openslo/v1alpha
kind: SLO

metadata:
  name: test
  # displayName: string # optional

spec:
  description: This is a SLO test document # optional
  service: my-test-service # name of the service to associate this SLO with
  
  indicator: # represents the Service Level Indicator (SLI)
    # thresholdMetric:     # represents the metric used to inform the SLO in the objectives stanza
    #   source: datadog     # data source for the metric
    #   queryType: query  # a name for the type of query to run on the data source
    #   query: sum:requests.duration{*}      # the query to run to return the metric
  #     metadata:          # optional, allows data source specific details to be passed

  timeWindows:
    # exactly one item, one of possible rolling time window or calendar aligned

    # rolling time window
    # - unit: Day       # → Accepted Blameless value: day or hour or minute
    #   count: 28     # → Accepted Blameless value: 28 (days) or X (hour) or X (minute)
    #   isRolling: true    # → Accepted Blameless value: true

    # or

    # calendar aligned time window
    - unit: Week
      count: 1 # count of time units for example count: 7 and unit: Day means 7 days window
      calendar:
        startTime: '2021-09-13 13:16:30'   # date with time in 24h format, format without time zone
        timeZone: America/New_York       # name as in IANA Time Zone Database
      isRolling: false # false or not defined

  budgetingMethod: Occurrences

  objectives:
    - displayName: TestSLI # optional ----> REQUIRED BY BLAMELESS (used as SLI name)
      op: or    # conditional operator used to compare the SLI against the value.
                                 # Only needed when using a thresholdMetric
                                 #  ----> Comparison Operator in BLAMELESS (or comparisonOperator)
      value: 100             # value used to compare metrics values.
                                 # All objectives of the SLO need to have a unique value.
                                 #  ----> Objective value latency in BLAMELESS (or objectiveValue)
                                 #  ----> Must be expressed in milliseconds by default
                                 #  ----> Set metricUnit == “ms” via BLAMELESS SLO API
      target: 0.994 # budget target for given objective of the SLO
                                 #  ----> Reliability Target in BLAMELESS (or objectivePercentage)
      timeSliceTarget: 0.6 # required only when budgetingMethod is set to TimeSlices
      # ratioMetric {good, total} should be defined only if thresholdMetric is not set.
      # ratioMetric good and total have to contain the same source type configuration.
      # errorBudgetPolicyName:     # ----> CAN WE ADD THIS CUSTOM FIELD FOR BLAMELESS to capture the name (or errorBudgetPolicyId) of the Error Budget Policy that already exists in Blameless. Optional parameter but need to verify that the EBP is optional when creating a new Blameless SLO. Alternatively, metadata for SLIs could be used, but it would be quite confusing to define an EBP under an SLI. There is no metadata elsewhere in the specs, but it would be worth exploring and adapting the Oslo validator to support custom Blameless parameters.

      ratioMetric:
          incremental: false    # Description missing in the OpenSLO specs
                                 #  ----> Only false supported by Blameless. If true, the Blameless value checker should inform the user that only “true” is supported.
          good: # the numerator
            source: datadog      # data source for the "good" numerator
            queryType: query   # a name for the type of query to run on the data source
            query: sum:requests.total{*}       # the query to run to return the numerator
            # metadata:           # optional, allows data source specific details to be passed
          total: # the denominator
            source: datadog      # data source for the "total" denominator
            queryType: query   # a name for the type of query to run on the data source
            query: sum:requests.total{*}       # the query to run to return the denominator
            # metadata:           # optional, allows data source specific details to be passed
            

